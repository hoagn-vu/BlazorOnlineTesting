@page "/exam"
@attribute [Authorize(Roles = "admin")]
@layout MainLayout

@inject NavigationManager Navigation
@using testQuiz.Models
@using MongoDB.Bson;
@inject testQuiz.Services.ExamService examService
@inject testQuiz.Services.QuestionService questionService
@inject testQuiz.Services.RoomService roomService
@inject testQuiz.Services.SubjectService subjectService
@inject testQuiz.Services.UserService userService

@code {
    [Inject] private IJSRuntime JSRuntime { get; set; }
    private Exam exam = new Exam();
    private Subject subject = new Subject();
    private List<Exam> Exams = new List<Exam>();
    private List<Subject> listSubjects = new List<Subject>();
    //private Exam editExam = new Exam();
    //private Exam newExam = new Exam { Rooms = new List<Room>() };

    protected override async Task OnInitializedAsync()
    {
        Exams = examService.GetAllExams();
        listSubjects = subjectService.GetSubjects();
        if (listSubjects.Any())
        {
            // Set default value to the first item in the list
            exam.SubjectIdString = listSubjects.First().Id.ToString();
        }
        exam.MaxScore = 10;
    }

    private void Save()
    {
        if (string.IsNullOrEmpty(exam.ExamName))
        {
            JSRuntime.InvokeVoidAsync("alert", "Vui lòng nhập tên kỳ thi");
            return;
        }

        if (string.IsNullOrEmpty(exam.SubjectIdString))
        {
            JSRuntime.InvokeVoidAsync("alert", "Vui lòng chọn môn học");
            return;
        }

        if (exam.NumberOfQuestions == 0)
        {
            JSRuntime.InvokeVoidAsync("alert", "Vui lòng nhập số lượng câu hỏi");
            return;
        }

        if (exam.MaxScore == 0)
        {
            JSRuntime.InvokeVoidAsync("alert", "Vui lòng nhập số điểm tối đa");
            return;
        }

        if (exam.Duration == 0)
        {
            JSRuntime.InvokeVoidAsync("alert", "Vui lòng nhập thời gian làm bài");
            return;
        }

        examService.SaveOrUpdate(exam);
        Reset();

        Exams = examService.GetAllExams(); // Refresh the list after saving
    }

    private void Reset()
    {
        exam = new Exam(); // Reset form
        exam.MaxScore = 10;
    }

    private void Edit(ObjectId examId)
    {
        exam = examService.GetExamById(examId);
    }

    private void Delete(ObjectId examId)
    {
        examService.Delete(examId);
        Exams = examService.GetAllExams(); // Refresh the list after deletion
        exam.MaxScore = 10;
    }

    private string GetNameSubject(ObjectId subjId)
    {
        return subjectService.GetNameSubject(subjId);
    }

}

<div class="container mt-4">
    <!-- Title -->
    <h1 class="text-center mb-4">Exam</h1>

    <!-- Row containing two cards side by side -->
    <div class="row">
        <!-- Exam Form Card -->
        <div class="col-md-5">
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-4 text-md-end">
                            <label class="form-label fw-bold">Name:</label>
                        </div>
                        <div class="col-md-8">
                            <input @bind="exam.ExamName" class="form-control" placeholder="Exam Name" required />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4 text-md-end">
                            <label class="form-label fw-bold">Subject:</label>
                        </div>
                        <div class="col-md-8">
                            <select @bind="exam.SubjectIdString" class="form-select">
                                @foreach (var subj in listSubjects)
                                {
                                    <option value="@subj.Id.ToString()">@subj.SubjectName</option>
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4 text-md-end">
                            <label class="form-label fw-bold">Number of Questions:</label>
                        </div>
                        <div class="col-md-8">
                            <input type="number" @bind="exam.NumberOfQuestions" class="form-control" placeholder="Number of Questions" required />
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-4 text-md-end">
                            <label class="form-label fw-bold">Max Score:</label>
                        </div>
                        <div class="col-md-8">
                            <input type="number" @bind="exam.MaxScore" class="form-control" placeholder="Max Score" required />
                        </div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-4 text-md-end">
                            <label class="form-label fw-bold">Duration (minutes):</label>
                        </div>
                        <div class="col-md-8">
                            <input type="number" @bind="exam.Duration" class="form-control" placeholder="Duration in minutes" required />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-md-8">
                            <button class="btn btn-info text-white">Search</button>
                            <button class="btn btn-primary me-2" @onclick="Save">Save</button>
                            <button class="btn btn-danger" @onclick="Reset">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Exam List Table Card -->
        <div class="col-md-7">
            <div class="card shadow-sm h-100">
                <div class="card-body">
                    <table class="table table-striped table-hover">
                        <thead class="table-primary text-center">
                            <tr>
                                <th>Exam Name</th>
                                <th>Subject</th>
                                <th>Num of Quest</th>
                                <th>Max Score</th>
                                <th>Duration (minutes)</th>
                                <th>Sessions</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Exams.Count > 0)
                            {
                                @foreach (var ex in Exams)
                                {
                                    <tr class="text-center">
                                        <td>@ex.ExamName</td>
                                        <td>@GetNameSubject(ex.SubjectId)</td>
                                        <td>@ex.NumberOfQuestions</td>
                                        <td>@ex.MaxScore</td>
                                        <td>@ex.Duration</td>
                                        <td><a href="@($"/{ex.Id}/session")" class="btn btn-link">Sessions</a></td>
                                        <td>
                                            <button class="btn btn-sm btn-primary me-2" @onclick="@(e => Edit(ex.Id))">Edit</button>
                                            <button class="btn btn-sm btn-danger" @onclick="@(e => Delete(ex.Id))">Delete</button>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center">No exams available.</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>





















@*<h1>Exam</h1>
    <div class="col-md-12 mb-3">
        <div class="row">
            <div class="col-md-4">
                <label>Name: </label>
            </div>
            <div class="col-md-8">
                <input @bind="exam.ExamName" style="width:100%" placeholder="Exam Name" required/>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label>Subject: </label>
            </div>
            <div class="col-md-8">
                <select @bind="exam.SubjectIdString" style="width:100%">
                    @foreach (var subj in listSubjects)
                    {
                        <option value="@subj.Id.ToString()">@subj.SubjectName</option>
                    }
                </select>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label>Number of Questions: </label>
            </div>
            <div class="col-md-8">
                <input type="number" @bind="exam.NumberOfQuestions" style="width:100%" placeholder="Number of Questions" required/>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label>Max Score: </label>
            </div>
            <div class="col-md-8">
                <input type="number" @bind="exam.MaxScore" style="width:100%" placeholder="Max Score" required/>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <label>Duration (minutes): </label>
            </div>
            <div class="col-md-8">
                <input type="number" @bind="exam.Duration" style="width:100%" placeholder="Duration in minutes" required/>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4"></div>
            <div class="col-md-8">
                <button class="btn btn-primary" @onclick="Save">Save</button>
                <button class="btn btn-danger" @onclick="Reset" style="float:right;">Cancel</button>
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Exam Name</th>
                    <th>Subject</th>
                    <th>Num of Quest</th>
                    <th>Max Score</th>
                    <th>Duration (minutes)</th>
                    <th>Sessions</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Exams.Count > 0)
                {
                    @foreach (var ex in Exams)
                    {
                        <tr>
                            <td>@ex.ExamName</td>
                            <td>@GetNameSubject(ex.SubjectId)</td>
                            <td>@ex.NumberOfQuestions</td>
                            <td>@ex.MaxScore</td>
                            <td>@ex.Duration</td>
                            <td><a href="@($"/{ex.Id}/session")">Sessions</a></td>
                            <td>
                                <button class="btn btn-primary" @onclick="@(e => Edit(ex.Id))">Edit</button>
                                <button class="btn btn-danger" @onclick="@(e => Delete(ex.Id))">Delete</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>*@
